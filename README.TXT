These code file folders Automaton_docs_subset, XBox360_TestAssistance_Framework, and Matthew James K's Testing-Automation contributon are the original version 1.0 XBox 360 test assistance framework, and is not stand alone for purposes of information hiding.
It was gruling at the time in terms of design, development, functional/usecase testing, and training that truly fit the rest of the test assistance framework, but well worth it all in the end as it was very well received in the removal process of extra manual testing steps.
Again much, much thanks to Kevin, Colen, Rose, Experis, and Lyndon for leading us in this valiant push forward.
These code files cannot be compiled without their companion source for purposes of information hiding, and are presently only available as an example of exellently designed, developped, and functional/usecase tested code with some internal automation done in near purest of C#, WPF, XAML, HTML4.0, SQL, XSLT, and XML.

• For this development and testing, I collaborated with a four member team to create, design, fully develop, and test an Xbox Game publishing test certification assistance tool. This tool performs all necessary Xbox console management, game install/uninstall, test setup, assisted test module execution, and clean up through the inclusive use of the Microsoft Xbox SDK game development and testing platform.
• My major contributions to this effort was 1) learning well the WPF XAML in order that I could give my best for the Xbox controller simulated input through an automation API that we used and was test driven by scripts I developed, and 2) taking the SDK and WPF XAML knowledge I acquired and used it to carefully examine every possible test module user scenario that may possibly come up in the course of using this test assistance (not automation) game certification.
Environment: C# with .NET v4.5, WPF with XAML, XML data, XHTML, VS2012, TFS, and an IP-based message pumping.
