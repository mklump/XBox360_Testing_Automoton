<Grid x:Class="PER033.PER033CTC1UI"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:vm="clr-namespace:PER033"
            Background="{Binding DataContext.CurrentTheme.Background2, RelativeSource={RelativeSource FindAncestor, AncestorType=Window} }">
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CATModel;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock" x:Key="TitleField">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <Style TargetType="Border" x:Key="ModuleBorderStyle">
                <Setter Property="BorderBrush" Value="#FF828790" />
                <Setter Property="BorderThickness" Value="2" />
            </Style>
            <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle" BasedOn="{StaticResource ThemeToggleButtonStyle}" >
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Width" Value="56"/>
                <Setter Property="FontSize" Value="9"/>
            </Style>

            <Style TargetType="Button" x:Key="ControllerButtonStyle">
                <Setter Property="Opacity" Value="0.2"></Setter>
                <Setter Property="Background" Value="White"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                        BorderThickness="3"
                        Padding="{TemplateBinding Padding}" 
                        BorderBrush="Black"
                        Background="White"
                        CornerRadius="10" >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.6"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="ControllerButtonStyleCircular">
                <Setter Property="Opacity" Value="0.1"></Setter>
                <Setter Property="Background" Value="Black"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                        BorderThickness="3"
                        Padding="{TemplateBinding Padding}" 
                        BorderBrush="White"
                        Background="Black"
                        CornerRadius="20" >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="0.6"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="GuideButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" 
                        BorderThickness="3"
           
                        BorderBrush="White"
                        Background="Black"
                        CornerRadius="15" >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <vm:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Grid.Resources>

    <StackPanel Orientation="Vertical">

        <!-- Test Case Title -->
        <TextBlock Text="CAT Module For CTC 033-1" Style="{StaticResource TitleField}" />
        <!-- Module Name -->
        <TextBlock Text="PER 033 - Controller Selection" VerticalAlignment="Center" HorizontalAlignment="Center"/>


        <StackPanel Visibility="{Binding FirstPageVisibility}">
            <!-- module instructions -->
            <Border Style="{StaticResource ModuleBorderStyle}">
                <Grid>
                    <TextBox Style="{StaticResource ThemeTextBoxStyle}" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve">

                        This is the CAT module for TCR PER 033 - Controller Selection
                            
                        This test involves verifying that any controller (no matter what quadrant) is able to be used.
                        The user must never have to swap controllers once they have started a game.
                            
                        Please connect an Xbox 360 controller to your PC BEFORE proceeding.
                        
                    </TextBox>
                </Grid>
            </Border>
            <Label Background="Red" Visibility="{Binding IsControllerConnected, Converter={StaticResource InvertBooleanToVisibilityConverter}}">No controller was detected. Please attach a controller to your PC before continuing</Label>
            <Button Height="25" Width="100" Click="NextPage" Style="{StaticResource ThemeButtonStyle}" Content="Begin" HorizontalAlignment="Center"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" Visibility="{Binding SecondPageVisibility}">
            <Label HorizontalAlignment="Center">Attach a controller to your PC or use this virtual game controller to drive the selected consoles. Keyboard may also work.</Label>


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="3*"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Width="125" Height="25" Command="{Binding LaunchTitleCommand}">Launch Title</Button>
                <Border Grid.Column="1" BorderBrush="Black" BorderThickness="1">
                    <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0">Controllers Connected:</TextBlock>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="0" Grid.Column="1" IsChecked="{Binding Quadrant1Connected}">Quadrant 1</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="0" Grid.Column="2" IsChecked="{Binding Quadrant2Connected}">Quadrant 2</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="0" Grid.Column="3" IsChecked="{Binding Quadrant3Connected}">Quadrant 3</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="0" Grid.Column="4" IsChecked="{Binding Quadrant4Connected}">Quadrant 4</ToggleButton>
                        <TextBlock Grid.Row="1" Grid.Column="0">Current Controlling:</TextBlock>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="1" Grid.Column="1" IsChecked="{Binding Quadrant1Controlled}">Quadrant 1</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="1" Grid.Column="2" IsChecked="{Binding Quadrant2Controlled}">Quadrant 2</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="1" Grid.Column="3" IsChecked="{Binding Quadrant3Controlled}">Quadrant 3</ToggleButton>
                        <ToggleButton Style="{StaticResource ToggleButtonStyle}" Grid.Row="1" Grid.Column="4" IsChecked="{Binding Quadrant4Controlled}">Quadrant 4</ToggleButton>
                    </Grid>
                </Border>
            </Grid>


            <Grid Margin="3" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="500"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0"  MaxHeight="300" >
                    <Grid Background="{Binding DataContext.CurrentTheme.Background2, RelativeSource={RelativeSource FindAncestor, AncestorType=Window} }"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>

                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="120"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition Height="40"></RowDefinition>
                                <RowDefinition ></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="5" BorderBrush="Black" BorderThickness="2"></Border>
                            <TextBox Margin="3,3,0,0" Grid.Row="0" Grid.Column="0" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve" VerticalContentAlignment="Top">Steps:
1. Perform the following at the first interactive screen:
   a.  Boot the game with 4 controllers attached (the module should perform this)
   b. Sign in a profile on controller 1 (module should perform this)
   c. Pick up controller 1 and Start the game</TextBox>
                            <TextBox Margin="3,0,0,0" Grid.Row="1" Grid.Column="0" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve" VerticalContentAlignment="Top">   d. Navigate the Menus.
   e. Attempt to Start.</TextBox>
                            <TextBox Margin="3,0,0,0" Grid.Row="2" Grid.Column="0" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve" VerticalContentAlignment="Top">   f. Reboot the game, sign in a profile on controller 1 and attempt to start the game with controller 2</TextBox>
                            <TextBox Margin="3,0,0,0" Grid.Row="3" Grid.Column="0" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve" VerticalContentAlignment="Top">   g. Reboot the game, sign in a profile on controller 1 and attempt to start the game with controller 3</TextBox>
                            <TextBox Margin="3,0,0,3" Grid.Row="4" Grid.Column="0" IsReadOnly="True" AcceptsReturn="True" TextWrapping="Wrap" xml:space="preserve" VerticalContentAlignment="Top">   h. Reboot the game, sign in a profile on controller 1 and attempt to start the game with controller 4</TextBox>
                            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0,0,3,0" HorizontalAlignment="Center">
                                <Button Height="20" Width="40" Click="Pass1_Click" IsEnabled="{Binding Quadrant1NotDone}">Pass</Button>
                                <Button Height="20" Width="40" Click="Fail1_Click" IsEnabled="{Binding Quadrant1NotDone}">Fail</Button>
                            </StackPanel>

                            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="0,0,3,0" HorizontalAlignment="Center">
                                <Button Height="20" Width="40" Click="Pass2_Click" IsEnabled="{Binding Quadrant2NotDone}">Pass</Button>
                                <Button Height="20" Width="40" Click="Fail2_Click" IsEnabled="{Binding Quadrant2NotDone}">Fail</Button>
                            </StackPanel>

                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="0,0,3,0" HorizontalAlignment="Center">
                                <Button Height="20" Width="40" Click="Pass3_Click" IsEnabled="{Binding Quadrant3NotDone}">Pass</Button>
                                <Button Height="20" Width="40" Click="Fail3_Click" IsEnabled="{Binding Quadrant3NotDone}">Fail</Button>
                            </StackPanel>

                            <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Margin="0,0,3,0" HorizontalAlignment="Center">
                                <Button Height="20" Width="40" Click="Pass4_Click" IsEnabled="{Binding Quadrant4NotDone}">Pass</Button>
                                <Button Height="20" Width="40" Click="Fail4_Click" IsEnabled="{Binding Quadrant4NotDone}">Fail</Button>
                            </StackPanel>
                            <TextBlock Grid.Row="5" Grid.Column="0" HorizontalAlignment="Center" Text="All quadrants tested.  Click on 'Complete Module' to see results." Visibility="{Binding AllQuadrantsDone, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>



                    </Grid>
                </Grid>

                <Grid Grid.Column="1" Height="300">

                    <Image Source="Images/controller2.png" Height="300" VerticalAlignment="Top"></Image>

                    <!-- Visibility="{Binding IsChecked, ElementName=keyboardToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                    <Grid Height="100" Width="150" Margin="313,65,37,110" Visibility="{Binding IsChecked, ElementName=keyboardToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid Height="30" Width="30" Margin="44,0,36,59" Background="Yellow">
                            <Canvas>
                                <Line 
                                            X1="1" Y1="15"
                                            X2="15" Y2="1"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="15" Y1="1"
                                            X2="30" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="15" Y1="1"
                                            X2="15" Y2="30"
                                            Stroke="Black"
                                            StrokeThickness="1" />

                            </Canvas>
                        </Grid>
                        <Grid Height="30" Width="30" Margin="0,35,70,30" Background="LightBlue">
                            <Canvas>
                                <Line 
                                            X1="1" Y1="15"
                                            X2="15" Y2="1"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="1" Y1="15"
                                            X2="15" Y2="30"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="1" Y1="15"
                                            X2="30" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />

                            </Canvas>
                        </Grid>
                        <Grid Height="30" Width="30" Margin="35,67,45,2" Background="LightGreen">
                            <Canvas>
                                <Line 
                                            X1="15" Y1="1"
                                            X2="15" Y2="30"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="15" Y1="30"
                                            X2="1" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="15" Y1="30"
                                            X2="30" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />


                            </Canvas>
                        </Grid>
                        <Grid Height="30" Width="30" Margin="74,37,6,32" Background="Red">
                            <Canvas>
                                <Line 
                                            X1="1" Y1="15"
                                            X2="30" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="30" Y1="15"
                                            X2="15" Y2="1"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                <Line 
                                            X1="15" Y1="30"
                                            X2="30" Y2="15"
                                            Stroke="Black"
                                            StrokeThickness="1" />


                            </Canvas>
                        </Grid>

                    </Grid>
                    <Grid Visibility="{Binding IsChecked, ElementName=keyboardToggleButton, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="135,150,253,55"   >
                        <Grid Height="20" Width="20"  Background="White" Margin="15,42,74,33"   >
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold">A</TextBlock>
                        </Grid>

                        <Grid Height="20" Width="20"  Background="White" RenderTransformOrigin="0.45,0.45" Margin="25,10,30,45">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="Bold">W</TextBlock>
                        </Grid>
                        <Grid Height="20" Width="20"  Background="White" Margin="54,32,1,23" >
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="16" FontWeight="Bold">D</TextBlock>
                        </Grid>
                        <Grid Height="20" Width="20"  Background="White" Margin="25,55,30,0"  >
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="16" FontWeight="Bold" >S</TextBlock>
                        </Grid>
                    </Grid>
                    <Button Content="_a" Height="30" Width="25" Click="Left_Click" Style="{StaticResource ControllerButtonStyle}" Margin="149,190,326,85" Foreground="Transparent">
                    </Button>

                    <Button Content="_s" Height="25" Width="30" Click="Down_Click" Style="{StaticResource ControllerButtonStyle}" Margin="174,215,296,66" Foreground="Transparent"/>
                    <Button Content="_d" Height="30" Width="25" Click="Right_Click" Style="{StaticResource ControllerButtonStyle}" Margin="203,190,272,80" Foreground="Transparent" />
                    <Button Content="_w" Height="25" Width="30" Click="Up_Click" Style="{StaticResource ControllerButtonStyle}" Margin="173,165,297,110" Foreground="Transparent"/>
                    <Button Height="20" Width="20" Click="Back_Click" Style="{StaticResource ControllerButtonStyle}" Margin="193,125,287,158"/>
                    <Button Height="20" Width="20" RenderTransformOrigin="-3.96,3.217" Margin="298,125,182,155" Click="Start_Click" Style="{StaticResource ControllerButtonStyle}"/>
                    <Button Content="_4" Height="40" Width="40" Click="X_Click" Style="{StaticResource ControllerButtonStyleCircular}" Margin="334,114,126,148"/>
                    <Button Content="_8" Height="40" Width="40" RenderTransformOrigin="-3.96,3.217" Margin="374,84,86,176" Click="Y_Click" Style="{StaticResource ControllerButtonStyleCircular}"/>
                    <Button Content="_6" Height="35" Width="40" RenderTransformOrigin="-3.96,3.217" Margin="403,114,57,151" Click="B_Click" Style="{StaticResource ControllerButtonStyleCircular}"/>
                    <Button Content="_2" Height="40" Width="40" Click="A_Click" Style="{StaticResource ControllerButtonStyleCircular}" Margin="363,141,97,119"/>
                    <Button Click="Guide_Click" Height="60" Width="60" Visibility="{Binding AnyQuadrantControlled, Converter={StaticResource InvertBooleanToVisibilityConverter}}" RenderTransformOrigin="0.564,-0.478" Margin="10,100,0,140" Style="{StaticResource GuideButtonStyle}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images\0quad.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Click="Guide_Click" Height="60" Width="60" Visibility="{Binding Quadrant1Controlled, Converter={StaticResource BooleanToVisibilityConverter}}" RenderTransformOrigin="0.564,-0.478" Margin="10,100,0,140" Style="{StaticResource GuideButtonStyle}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images\1stquad.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Click="Guide_Click" Height="60" Width="60" Visibility="{Binding Quadrant2Controlled, Converter={StaticResource BooleanToVisibilityConverter}}" RenderTransformOrigin="0.564,-0.478" Margin="10,100,0,140" Style="{StaticResource GuideButtonStyle}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images\2ndquad.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Click="Guide_Click" Height="60" Width="60" Visibility="{Binding Quadrant3Controlled, Converter={StaticResource BooleanToVisibilityConverter}}" RenderTransformOrigin="0.564,-0.478" Margin="10,100,0,140" Style="{StaticResource GuideButtonStyle}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images\3rdquad.png"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Click="Guide_Click" Height="60" Width="60" Visibility="{Binding Quadrant4Controlled, Converter={StaticResource BooleanToVisibilityConverter}}" RenderTransformOrigin="0.564,-0.478" Margin="10,100,0,140" Style="{StaticResource GuideButtonStyle}">
                        <Button.Template>
                            <ControlTemplate>
                                <Image Source="Images\4thquad.png"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"></Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Height="30" Width="80" Click="LeftShoulder_Click" Style="{StaticResource ControllerButtonStyle}" Margin="71,40,349,230"   />
                    <Button Height="30" Width="80" Click="RightShoulder_Click" Style="{StaticResource ControllerButtonStyle}" Margin="351,37,69,233"  />
                    <Button Height="35" Width="35" Click="LeftTrigger_Click" Style="{StaticResource ControllerButtonStyle}" Margin="116,5,349,260"  />
                    <Button Height="35" Width="35" Click="RightTrigger_Click" Style="{StaticResource ControllerButtonStyle}" Margin="351,6,114,259" />
                    <ToggleButton x:Name="keyboardToggleButton" Width="125" Height="25" HorizontalAlignment="Center" Margin="193,265,182,10" >Keyboard Shortcuts</ToggleButton>
                </Grid>
            </Grid>


        </StackPanel>

    </StackPanel>
</Grid>
