<Window x:Class="CAT.DebugOutputWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:CAT"
        Background="{Binding CurrentTheme.Background2}"
        Name="DebugOutput"
        Title="{Binding Title}" Icon="CAT.ico" MinWidth="800" MinHeight="400" >
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <vm:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter"/>
        <vm:InvertBoolConverter x:Key="InvertBoolConverter" />
        <vm:MonitorAPIStatusConverter x:Key="MonitorAPIStatusConverter"/>
        <vm:HasDebugOutputSymbolsConverter x:Key="HasDebugOutputSymbolsConverter"/>
        <vm:InvertHasDebugOutputSymbolsConverter x:Key="InvertHasDebugOutputSymbolsConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="150"></RowDefinition>
            <RowDefinition ></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!-- APIMonitor-->
        <GroupBox Header="APIMon" Grid.Column="0" Grid.Row="0">
            <Grid Margin="5,0,0,0"  Width="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!-- <ColumnDefinition Width="280"></ColumnDefinition>
                        <ColumnDefinition Width="300"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition> -->
                    </Grid.ColumnDefinitions>
                    <!-- <TextBlock Text="Monitoring:" VerticalAlignment="Center"/> -->
                    <StackPanel Orientation="Vertical" Grid.Column="0">
                        
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Margin="3">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Grid.Row="1" Margin="2,0,0,0" HorizontalAlignment="Left">
                        Currently Monitoring:
                                    </TextBlock>
                                </StackPanel>
                                <ListView Width="260" Height="100" HorizontalAlignment="Left" ItemsSource="{Binding MonitorAPISessions, Mode=OneWay}"
                                  Background="{Binding CurrentTheme.Background1}" SelectionChanged="ListView_SelectionChanged" SelectionMode="Single" >
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource MonitorAPIStatusConverter}">
                                                        <Binding Path="MonitorAPISession.IsSymbolFound" />
                                                        <Binding Path="MonitorAPISession.WasCalled" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu>
                                                        <MenuItem Header="Remove Symbol" IsEnabled="{Binding CanRemove}" Command="{Binding Path=ViewModel.RemoveSymbolCommand}" CommandParameter="{Binding}"/>
                                                        <MenuItem Header="Reset Called Status" IsEnabled="{Binding MonitorAPISession.WasCalled}"  Command="{Binding Path=ViewModel.ResetCalledCommand}" CommandParameter="{Binding}"/>
                                                    </ContextMenu>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.View>
                                        <GridView AllowsColumnReorder="true">
                                            <GridViewColumn DisplayMemberBinding="{Binding MonitorAPISession.SymbolName}" Header="Function"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding MonitorAPISession.IsSymbolFound}" Header="Found"/>
                                            <GridViewColumn DisplayMemberBinding="{Binding MonitorAPISession.WasCalled}" Header="Called"/>
                                        </GridView>
                                    </ListView.View>
                                </ListView>

                            </StackPanel>
                            <StackPanel Orientation="Vertical" Margin="3">
                                <TextBlock Text="Additional Functions:" />
                                <!-- <TextBox Style="{StaticResource ThemeTextBoxStyle}" Width="200" Text="{Binding SymbolToAdd}"/> -->
                                <ListBox Height="85" SelectionMode="Multiple" ItemsSource="{Binding MonitorAPISymbols}" DisplayMemberPath="SymbolName" Width="230" >
                                    <ListBox.InputBindings>
                                        <KeyBinding Command="{Binding SelectAllCommand}"
                                        Modifiers="Ctrl"
                                        Key="A" />
                                    </ListBox.InputBindings>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                            <Setter Property="Visibility" Value="{Binding IsAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                                <Button Style="{StaticResource ThemeButtonStyle}" Content="Add Selected Functions To Monitor" Command="{Binding AddSymbolCommand}"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="3">
                            <TextBlock Text="Status:" VerticalAlignment="Center" HorizontalAlignment="Left" />

                            <Grid  Background="Red" Visibility="{Binding TestPassing, Converter={StaticResource InvertBooleanToVisibilityConverter }}" VerticalAlignment="Center" Height="60">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Monitored API Call Detected from Title" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Grid Grid.Row="1" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{StaticResource ThemeButtonStyle}" Grid.Column="1" Command="{Binding Path=ResetTestCommand}" >Reset</Button>
                                </Grid>
                            </Grid>

                                <Grid Visibility="{Binding TestPassing, Converter={StaticResource BooleanToVisibilityConverter }}" VerticalAlignment="Center" Height="60">
                                    <Grid Background="#FFC3D7A4" Margin="0,0,0,3" Height="60">
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource HasDebugOutputSymbolsConverter}">
                                                <Binding Path="OutputDebugStringASymbolSession.MonitorAPISession.IsSymbolFound" Mode="OneWay" />
                                                <Binding Path="OutputDebugStringWSymbolSession.MonitorAPISession.IsSymbolFound" Mode="OneWay" />
                                            </MultiBinding>
                                        </Grid.Visibility>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="No Monitored APIs Called : Passing"  HorizontalAlignment="Center"/>
                                </Grid>
                                <Grid Background="Yellow" Height="60">
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource InvertHasDebugOutputSymbolsConverter}">
                                                <Binding Path="OutputDebugStringASymbolSession.MonitorAPISession.IsSymbolFound" Mode="OneWay" />
                                                <Binding Path="OutputDebugStringWSymbolSession.MonitorAPISession.IsSymbolFound" Mode="OneWay" />
                                            </MultiBinding>
                                        </Grid.Visibility>
                                        <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0"  VerticalAlignment="Center">
                                        <TextBlock Text="No symbols for the currently running title" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Grid>
                                    <Grid Grid.Row="1" VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Button Style="{StaticResource ThemeButtonStyle}" Grid.Column="1" Command="{Binding Path=MainViewModel.OpenSettingsCommand}" IsEnabled="{Binding MainViewModel.CurrentModule.ModuleContext.IsModal, Converter={StaticResource InvertBoolConverter} }" >Open Settings</Button>
                                    </Grid>
                                </Grid>
                            </Grid>

                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    
                </Grid>
            </Grid>
        </GroupBox>
        <!-- Crash Dumps -->
        <GroupBox Header="Crash Dumps" Grid.Column="1" Grid.Row="0">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Top" >
                <StackPanel Orientation="Horizontal">
                <RadioButton VerticalAlignment="Center" GroupName="dumpSetting"></RadioButton>
                <Label>Mini</Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <RadioButton VerticalAlignment="Center" GroupName="dumpSetting" IsChecked="{Binding Path=DumpFullHeap}"></RadioButton>
                    <Label>Full</Label>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <Grid Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBox  Grid.Row="0" Background="{Binding CurrentTheme.Background2}" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Debug Output:">
            </TextBox>
            <Border Grid.Row="1" BorderBrush="{Binding CurrentTheme.Background3}" BorderThickness="2"  VerticalAlignment="Stretch">
                <RichTextBox Name="DebugOutputBox" VerticalScrollBarVisibility="Visible" IsReadOnly="True" VerticalAlignment="Stretch">
                </RichTextBox>
            </Border>
            <Button Style="{StaticResource ThemeButtonStyle}" Grid.Row="2" Grid.Column="1" Width="80" Height="20" Content="Open Log" Margin="8,5,8,2" Command="{Binding Path=OpenLogDirectoryCommand}" HorizontalAlignment="Right"/>
        </Grid>
        
    </Grid>
</Window>

