<Window x:Class="CAT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:CAT"
        Title="CAT - Development Preview" Height="350" Width="725" MinWidth="1000" MinHeight="600" Icon="CAT.ico" >
    <Window.DataContext>
        <vm:MainViewModel></vm:MainViewModel>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <vm:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter"/>
        <vm:InvertBoolConverter x:Key="InvertBoolConverter" />
        <!-- LinearGradientBrush used by roundedButton style -->
        <LinearGradientBrush x:Key="BackBrush" StartPoint="0.5,0" EndPoint="0.5,0.5">
            <GradientStop Offset="0">
                <GradientStop.Color>
                    <Color A="255" R="250" G="250" B="250" />
                </GradientStop.Color>
            </GradientStop>
            <GradientStop Offset="1">
                <GradientStop.Color >
                    <Color A="255" R="207" G="184" B="153" />
                </GradientStop.Color>
            </GradientStop>
        </LinearGradientBrush>

        <!-- Brush used for buttons mouseover -->
        <LinearGradientBrush x:Key="BackBrushHover" StartPoint="0.5,0" EndPoint="0.5,0.5">
            <GradientStop Offset="0">
                <GradientStop.Color>
                    <Color A="255" R="250" G="250" B="250" />
                </GradientStop.Color>
            </GradientStop>
            <GradientStop Offset="1">
                <GradientStop.Color>
                    <Color A="255" R="227" G="204" B="173" />
                </GradientStop.Color>
            </GradientStop>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BackBrushClick" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Offset="0">
                <GradientStop.Color>
                    <Color A="255" R="207" G="184" B="153" />
                </GradientStop.Color>
            </GradientStop>
            <GradientStop Offset="1">
                <GradientStop.Color>
                    <Color A="255" R="250" G="250" B="250" />
                </GradientStop.Color>
            </GradientStop>
        </LinearGradientBrush>

        <!-- Style for Device Pool -->
        <Style x:Key="devicePoolStyle" TargetType="ListView">
            <Setter Property="Background" Value="{Binding CurrentTheme.Background4}" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <!-- style for clear filter button -->
        <Style x:Key="clearFilter" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="buttonBorder"  Background="#FFEAE5EE" >
                            <Border BorderBrush="#FF505050" BorderThickness="1" >
                                <Grid>
                                <Canvas>
                                        <Line 
                                            X1="1" Y1="12"
                                            X2="12" Y2="1"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                        <Line 
                                            X1="1" Y1="1"
                                            X2="12" Y2="12"
                                            Stroke="Black"
                                            StrokeThickness="1" />
                                    </Canvas>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,3,3,9" />
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- <Setter Property="Foreground" Value="Black" />  -->
                                <Setter Property="Background" Value="{StaticResource BackBrushHover}" TargetName="buttonBorder"/>
                            </Trigger>
                            <Trigger Property="IsPressed"  Value="True">
                                <Setter Property="Background" Value="{StaticResource BackBrushClick}" TargetName="buttonBorder"></Setter>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled"  Value="False">
                                <Setter Property="Background" Value="Black" TargetName="buttonBorder"></Setter>
                                <Setter Property="Button.Foreground" Value="Black" ></Setter>
                                <Setter Property="Visibility" Value="Collapsed" ></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=FilterHasContent}" Value="True">
                    <Setter Property="Visibility" Value="Visible">
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=FilterHasContent}" Value="False">
                    <Setter Property="Visibility" Value="Hidden">
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
        </Grid.Resources>
        <DockPanel LastChildFill="True" >
            <!-- Device Pool UI (BOTTOM)-->
            <Grid DockPanel.Dock="Bottom"  >
                <!-- Grid for displaying module controls, only while a module is picked-->
                <Border BorderBrush="Black" BorderThickness="2">
                    <Grid Visibility="{Binding Path=CurrentModule.ModuleContext.IsModal, Converter={StaticResource BooleanToVisibilityConverter} }"  HorizontalAlignment="Stretch" Background="{Binding CurrentTheme.Background3}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0"  Grid.Column="0" HorizontalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"  />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition  />
                                <RowDefinition  />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="1" Text="Log Text:" VerticalAlignment="Center" Foreground="{Binding CurrentTheme.Foreground2}" Margin="5,0,0,0" />
                                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding ModuleLogTextContent}" Margin="8,5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Style="{StaticResource ThemeTextBoxStyle}"/>
                            </Grid>
                            <Button Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" Content="Add to Log" Command="{Binding Path=ModuleLogTextCommand}" Margin="8,5,8,2" ToolTip="Add to Log" Style="{StaticResource ThemeButtonStyle2}" />
                    </Grid>
                    <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Orientation="Vertical" VerticalAlignment="Center" >
                            <Button Style="{StaticResource ThemeButtonStyle2}"  Content="Complete Module" Command="{Binding Path=FinishModuleCommand}" ToolTip="Generate Results Log" VerticalAlignment="Stretch" Margin="50,5,5,5"></Button>
                        <!-- <TextBlock Text="Generate Results Log" TextWrapping="Wrap" TextAlignment="Center"/> -->
                    
                  
                            <Button Style="{StaticResource ThemeButtonStyle2}"  Content="Abort Module" Command="{Binding Path=ChangeModuleCommand}" ToolTip="Stop Test Before Completion" VerticalAlignment="Stretch" Margin="50,5,5,5"></Button>
                        <!-- <TextBlock Text="Stop Test Before Completion" TextWrapping="Wrap" TextAlignment="Center"/> -->
                    </StackPanel>
                </Grid>
                </Border>
                <Grid Visibility="{Binding DevicePoolVisibility}">
                    <ListView ItemsSource="{Binding Path=XboxList}" Style="{StaticResource devicePoolStyle}" VerticalAlignment="Stretch"
                           SelectionMode="Single" PreviewMouseDown="DevicePoolPreviewMouseDown"
                          IsEnabled="{Binding CurrentModule.ModuleContext.IsModal, Converter={StaticResource InvertBoolConverter} }"
                          SelectionChanged="OnDeviceSelectionChanged" >
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" IsItemsHost="True" VerticalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Refresh Device List" Command="{Binding Path=RefreshDevicePoolCommand}" />
                                <MenuItem Header="Add Device" Command="{Binding Path=AddDeviceCommand}" />
                            </ContextMenu>
                        </ListView.ContextMenu>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="OnListViewItemPreviewMouseLeftButtonDown" />

                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="Connect" Command="{Binding Path=PlacementTarget.DataContext.ReconnectDeviceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.Connected, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Set as Default" Command="{Binding Path=PlacementTarget.DataContext.SetAsDefaultCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.IsDefault, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Open Debug Output" Command="{Binding Path=PlacementTarget.DataContext.OpenDebugOutputCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}" ToolTip="If needed, please check Symbols path is set in Settings..."
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanOpenDebugOutput, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Open Profile Manager" Command="{Binding Path=PlacementTarget.DataContext.OpenProfileManagerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Open Virtual Controller" Command="{Binding Path=PlacementTarget.DataContext.OpenVirtualControllerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Explore" Command="{Binding Path=PlacementTarget.DataContext.LaunchExplorerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Reboot" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.ColdRebootDeviceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />
                                            <MenuItem Header="Launch Dev Dashboard" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchDevDashboardCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />
                                            <MenuItem Header="Flash" IsEnabled="{Binding Path=PlacementTarget.DataContext.CanFlash, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" >
                                                <MenuItem Header="w/SEP" Command="{Binding Path=PlacementTarget.DataContext.FlashDeviceWithSEPCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanFlash, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                                <MenuItem Header="no SEP" Command="{Binding Path=PlacementTarget.DataContext.FlashDeviceWithoutSEPCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanFlash, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            </MenuItem>
                                            <!-- Scripts Context Menu Items -->
                                            <MenuItem Header="Script" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }">
                                                <MenuItem Header="Press B Back Four" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Back_Four"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Asia Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Asia_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="China Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="China_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Australia NewZealand Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Australia_NewZealand_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Europe Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Europe_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Japan Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Japan_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="North American Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="North_American_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Rest of World Region" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Rest_of_World_Region"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Open Friend Presence Screen" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Open_Friend_Presence_Screen"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Communications Set Blocked" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Communications_Set_Blocked"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Communications Set Everyone" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Communications_Set_Everyone"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Communications Set Friends Only" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Communications_Set_Friends_Only"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Enable Xbox Live Game Play Privileges" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Enable_Xbox_Live_Game_Play_Privileges"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Disable Xbox Live Game Play Privileges" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Disable_Xbox_Live_Game_Play_Privileges"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Voice Output Set Both" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Voice_Output_Set_Both"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Voice Output Set HeadSet" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Voice_Output_Set_HeadSet"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Voice Output Set Speakers" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Voice_Output_Set_Speakers"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                                <MenuItem Header="Wake Up Xbox Devkit" Command="{Binding Path=PlacementTarget.DataContext.RunScriptItemCommand,
                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="Wake_Up_Xbox_Devkit"
                                                          IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                          />
                                            </MenuItem>
                                            <!--  <MenuItem Header="Enable HDD" Command="{Binding Path=PlacementTarget.DataContext.EnableHDDCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding IsHDDEnabled, Converter={StaticResource InvertBooleanToVisibilityConverter}}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanEnableHDD, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                        <MenuItem Header="Disable HDD" Command="{Binding Path=PlacementTarget.DataContext.DisableHDDCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding IsHDDEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanDisableHDD, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                        <MenuItem Header="Enable Internal MU" Command="{Binding Path=PlacementTarget.DataContext.EnableMUINTCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding IsMUINTEnabled, Converter={StaticResource InvertBooleanToVisibilityConverter}}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanEnableMUINT, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                        <MenuItem Header="Disable Internal MU" Command="{Binding Path=PlacementTarget.DataContext.DisableMUINTCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding IsMUINTEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanDisableMUINT, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />   -->
                                            <MenuItem Header="Save Screen Snapshot" Command="{Binding Path=PlacementTarget.DataContext.SaveScreenShotCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />
                                            <MenuItem Header="Install Raw Title" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallRawTitleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanInstallRawTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  />
                                            <MenuItem Header="Uninstall Raw Title" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallRawTitleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanUninstallRawTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  />
                                            <MenuItem Header="Mount Game Disc Image" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.StartEmulatingDiscImageTitleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanMountDiscImage, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                 />
                                            <MenuItem Header="Unmount Game Disc Image" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.StopEmulatingDiscImageTitleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanUnmountDiscImage, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  />
                                            <MenuItem Header="Install Title" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsContentPackageTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  >
                                                <MenuItem Header="HDD" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleHDDCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleHDD, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsHDDEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleMU0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleMU0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleMU1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleMU1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal MU" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleMUINTCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleMUINT, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMUINTEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal USB" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleINTUSBCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleINTUSB, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsINTUSBEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleUSB0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleUSB0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.InstallContentPackageBasedTitleUSB1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanInstallContentPackageBasedTitleUSB1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                            </MenuItem>
                                            <MenuItem Header="Uninstall Title" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsContentPackageTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  >
                                                <MenuItem Header="HDD" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleHDDCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleHDD, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsHDDEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleMU0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleMU0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleMU1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleMU1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal MU" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleMUINTCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleMUINT, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMUINTEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal USB" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleINTUSBCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleINTUSB, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsINTUSBEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleUSB0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleUSB0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.UninstallContentPackageBasedTitleUSB1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanUninstallContentPackageBasedTitleUSB1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                            </MenuItem>
                                            <MenuItem Header="Launch Title" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsContentPackageTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  >
                                                <MenuItem Header="HDD" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleHDDCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleHDD, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsHDDEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleMU0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleMU0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="MU 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleMU1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleMU1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMU1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal MU" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleMUINTCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleMUINT, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsMUINTEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="Internal USB" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleINTUSBCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleINTUSB, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsINTUSBEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 0" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleUSB0Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleUSB0, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB0Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                <MenuItem Header="USB 1" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchContentPackageBasedTitleUSB1Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  CommandParameter="{Binding}" 
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.CanLaunchContentPackageBasedTitleUSB1, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.IsUSB1Enabled, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                            </MenuItem>
                                            <MenuItem Header="Launch Title" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.LaunchTitleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanLaunchNonContentPackageBasedTitle, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                  />

                                            <MenuItem Header="Set Video Mode" IsEnabled="{Binding Path=PlacementTarget.DataContext.CanSetVideoMode, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }">
                                                <MenuItem Header="NTSC-M">
                                                    <MenuItem Header="640x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCM640x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="640x480 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCM640x480WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x720p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCM1280x720pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080i" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCM1920x1080iCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCM1920x1080pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                </MenuItem>
                                                <MenuItem Header="NTSC-J">
                                                    <MenuItem Header="640x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCJ640x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="640x480 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCJ640x480WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x720p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCJ1280x720pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080i" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCJ1920x1080iCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoNTSCJ1920x1080pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                </MenuItem>

                                                <MenuItem Header="PAL-50">
                                                    <MenuItem Header="640x576" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL50640x576Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="640x576 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL50640x576WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x720p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL501280x720pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080i" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL501920x1080iCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL501920x1080pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                </MenuItem>
                                                <MenuItem Header="PAL-60">
                                                    <MenuItem Header="640x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL60640x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="640x480 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL60640x480WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x720p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL601280x720pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080i" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL601920x1080iCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1920x1080p" Command="{Binding Path=PlacementTarget.DataContext.SetVideoPAL601920x1080pCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                </MenuItem>

                                                <MenuItem Header="VGA">
                                                    <MenuItem Header="640x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA640x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="640x480 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA640x480WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <!-- <MenuItem Header="720x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA720x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <!-- <MenuItem Header="640x576" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA640x576Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <!-- <MenuItem Header="720x576" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA720x576Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <!-- <MenuItem Header="800x600" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA800x600Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <MenuItem Header="848x480" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA848x480Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1024x768" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1024x768Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1024x768 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1024x768WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <!-- <MenuItem Header="1152x864" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1152x864Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <MenuItem Header="1280x720" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1280x720Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x768" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1280x768Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <!-- <MenuItem Header="1280x960" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1280x960Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <MenuItem Header="1280x1024" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1280x1024Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1280x1024 Widescreen" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1280x1024WideCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1360x768" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1360x768Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1440x900" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1440x900Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="1680x1050" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1680x1050Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                    <!-- <MenuItem Header="1920x540" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1920x540Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                -->
                                                    <MenuItem Header="1920x1080" Command="{Binding Path=PlacementTarget.DataContext.SetVideoVGA1920x1080Command, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                                </MenuItem>
                                            </MenuItem>
                                            <!-- 
                                        <MenuItem Header="Set Language" IsEnabled="{Binding Path=PlacementTarget.DataContext.CanSetLanguage, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }">
                                            <MenuItem Header="English" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageEnglishCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Japanese" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageJapaneseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="German" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageGermanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="French" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageFrenchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Spanish" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageSpanishCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Italian" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageItalianCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Korean" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageKoreanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Traditional Chinese" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageTraditionalChineseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Brazilian Portugese" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageBrazilianPortugueseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Polish" Command="{Binding Path=PlacementTarget.DataContext.SetLanguagePolishCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Russian" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageRussianCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Swedish" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageSwedishCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Turkish" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageTurkishCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Norwegian" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageNorwegianCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Dutch" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageDutchCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Simplified Chinese" Command="{Binding Path=PlacementTarget.DataContext.SetLanguageSimplifiedChineseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                        </MenuItem>
                    -->
                                            <!--
                                        <MenuItem Header="Set Region">
                                            <MenuItem Header="North America" Command="{Binding Path=PlacementTarget.DataContext.SetRegionNorthAmericaCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Asia" Command="{Binding Path=PlacementTarget.DataContext.SetRegionAsiaCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Europe" Command="{Binding Path=PlacementTarget.DataContext.SetRegionEuropeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                            <MenuItem Header="Rest Of World" Command="{Binding Path=PlacementTarget.DataContext.SetRegionRestOfWorldCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" CommandParameter="{Binding}"/>
                                        </MenuItem>
                                        -->
                                            <MenuItem Header="Get Video Resolution" Command="{Binding Path=PlacementTarget.DataContext.GetResolutionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }"
                                                  />

                                            <MenuItem Header="Synchronize Time" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.SynchronizeTimeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />

                                            <MenuItem Header="Set RAM to 1GB" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.SetTo1GBCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.CanSetTo1GB, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" />

                                            <!-- <MenuItem Header="Set RAM to 512MB" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.SetTo512MBCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  Visibility="{Binding Path=PlacementTarget.DataContext.Has1GB, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}, Converter={StaticResource BooleanToVisibilityConverter} }" /> -->


                                            <MenuItem Header="Delete All Games" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.DeleteAllGamesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />

                                            <MenuItem Header="Delete All Profiles" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.DeleteAllProfilesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />

                                            <MenuItem Header="Delete All Saves" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.DeleteAllSavesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />

                                            <MenuItem Header="Run Automation Script" IsEnabled="{Binding Path=PlacementTarget.DataContext.ConnectedAndResponding, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  Command="{Binding Path=PlacementTarget.DataContext.RunScriptCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"
                                                  />

                                            <MenuItem Header="Remove Xbox" Command="{Binding Path=PlacementTarget.DataContext.RemoveDeviceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu} }" 
                                                  CommandParameter="{Binding}"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <!-- Control Template For Contents of Device Pool Panels-->
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}" >

                                            <Border x:Name="deviceBorder" BorderBrush="Black" BorderThickness="3" CornerRadius="5" Margin="2,0" >
                                                <Grid Background="{Binding CurrentTheme.Background2}" VerticalAlignment="Center" Height="95">
                                                    <Grid Background="{Binding CurrentTheme.Background2}" >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Grid Background="{Binding CurrentTheme.Background3}">
                                                            <CheckBox  HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsChecked="{Binding Path=IsSelected}"  ClipToBounds="True" />
                                                        </Grid>
                                                        <TextBlock  Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Text="{Binding Path=Name}" Height="Auto" Background="{Binding CurrentTheme.Background3}" Foreground="{Binding CurrentTheme.Foreground2}" />
                                                        <!-- Visibility="{Binding Path=Connected, Converter={StaticResource BooleanToVisibilityConverter} }"-->
                                                        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2" Background="{Binding CurrentTheme.Background3}" FlowDirection="RightToLeft" >

                                                            <TextBlock Text="{Binding Path=IP}" Height="Auto" Visibility="{Binding Path=AuxPanelVisibility}"  Foreground="{Binding CurrentTheme.Foreground2}" HorizontalAlignment="Stretch"  />
                                                        </StackPanel>
                                                        <!-- Main image of devkit -->

                                                        <Image Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"  Source="{Binding ImageName}" Stretch="None" />
                                                        <Image Grid.Row="1" Grid.Column="1" Source="Images/defaultCheck.png" Width="15" Visibility="{Binding Path=IsDefault, Converter={StaticResource BooleanToVisibilityConverter} }"
                                                               ToolTip="Device is set as default" Margin="20,20,0,0"></Image>

                                                        <Grid Grid.Column="1" Grid.Row="1"  VerticalAlignment="Center">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="15" />
                                                                <RowDefinition Height="15"  />
                                                                <RowDefinition Height="15"  />
                                                                <RowDefinition Height="15"  />
                                                                <RowDefinition Height="15"  />
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Grid.Column="1" Grid.Row="4" Text="Offline" Height="Auto" Visibility="{Binding Path=IsOffline, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                            <TextBlock Grid.Column="1" Grid.Row="4" Text="Connecting" Height="Auto" Visibility="{Binding Path=Connecting, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                            <TextBlock Grid.Column="1" Grid.Row="4" Text="Disconnected" Height="Auto" Visibility="{Binding Path=Disconnected, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                                        </Grid>
                                                        <!-- Auxiliary Panel of Device Info Panel-->
                                                        <Border x:Name="auxBorder"  Grid.Row="1" Grid.Column="2" Grid.RowSpan="4" Visibility="{Binding Path=AuxPanelVisibility}" >
                                                            <!-- Margin="3,5,3,0" -->
                                                            <Grid Grid.Row="1" Grid.Column="2" Grid.RowSpan="4" Visibility="{Binding Path=AuxPanelVisibility}" Background="{Binding CurrentTheme.Background1}" Margin="1">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                    <ColumnDefinition></ColumnDefinition>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition></RowDefinition>
                                                                    <RowDefinition></RowDefinition>
                                                                </Grid.RowDefinitions>
                                                                <!-- Language Control-->
                                                                <GroupBox Header="Language" Grid.Column="1" Grid.Row="0" FontSize="9" Background="{Binding CurrentTheme.Background1}" >
                                                                    <ComboBox Style="{StaticResource ThemeComboBoxStyle}">
                                                                        <ComboBoxItem Content="English" Selected="SetLanguageEnglish" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Japanese" Selected="SetLanguageJapanese" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="German" Selected="SetLanguageGerman" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="French" Selected="SetLanguageFrench" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Spanish" Selected="SetLanguageSpanish" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Italian" Selected="SetLanguageItalian" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Korean" Selected="SetLanguageKorean" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Trad Chinese" Selected="SetLanguageTraditionalChinese" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Simp Chinese" Selected="SetLanguageSimplifiedChinese" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Braz Portuguese" Selected="SetLanguagePortuguese" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Polish" Selected="SetLanguagePolish" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Russian" Selected="SetLanguageRussian" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Swedish" Selected="SetLanguageSwedish" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Turkish" Selected="SetLanguageTurkish" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Norwegian" Selected="SetLanguageNorwegian" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                        <ComboBoxItem Content="Dutch" Selected="SetLanguageDutch" Style="{StaticResource ThemeComboBoxItemStyle}" />
                                                                    </ComboBox>

                                                                </GroupBox>
                                                                <!-- Memory Mode -->
                                                                <GroupBox Header="Memory Mode" FontSize="9" Grid.Column="2" Grid.Row="0" Background="{Binding CurrentTheme.Background1}" >
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <!--IsEnabled="{Binding Path=Is1GBCapable, Mode=OneWay}" -->
                                                                        <!-- , Converter={StaticResource InvertBoolConverter} -->

                                                                        <!-- IsEnabled="{Binding CurrentModule.ModuleContext.IsModal, Converter={StaticResource InvertBoolConverter} }"-->
                                                                        <RadioButton IsChecked="{Binding Path=Has512MB, Mode=TwoWay}" ToolTip="Switch to 512MB Mode">512 MB</RadioButton>
                                                                        <RadioButton Visibility="{Binding Path=Is1GBCapable, Converter={StaticResource BooleanToVisibilityConverter}}" IsChecked="{Binding Path=Has1GB, Mode=TwoWay}" IsEnabled="True" ToolTip="Switch to 1GB Mode">1 GB</RadioButton>
                                                                    </StackPanel>
                                                                </GroupBox>
                                                                <!-- Storage Devices -->
                                                                <GroupBox Header="Internal" Grid.Column="3" Grid.Row="0" FontSize="9" Background="{Binding CurrentTheme.Background1}" >
                                                                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                                                                        <CheckBox IsChecked="{Binding Path=IsHDDEnabled}" ToolTip="Enable/Disable HDD" Background="Beige" BorderThickness="0">
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <Image Source="Images/HDD_20px.png" Width="15"></Image>
                                                                                <TextBlock>HDD</TextBlock>
                                                                            </StackPanel>
                                                                        </CheckBox>
                                                                        <CheckBox IsChecked="{Binding Path=IsMUINTEnabled}" ToolTip="Enable/Disable MUINT" BorderThickness="0">
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <Image Width="15" Source="Images/intDevice_trans.png"></Image>
                                                                                <TextBlock Text="MUINT" />
                                                                            </StackPanel>
                                                                        </CheckBox>
                                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsINTUSBEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                            <Image Width="15" Source="Images/intDevice_trans.png"></Image>
                                                                            <TextBlock Text="INTUSB" />
                                                                        </StackPanel>
                                                                    </StackPanel>
                                                                </GroupBox>
                                                                <GroupBox Header="External" Grid.Column="3" Grid.Row="1" FontSize="9" Background="{Binding CurrentTheme.Background1}" >
                                                                    <StackPanel Orientation="Horizontal"  ToolTip="Removable Devices">
                                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsMU0Enabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                            <Image Width="15"  Source="Images/extMUA_trans.png"></Image>
                                                                            <TextBlock  >
                                                                    MU0
                                                                            </TextBlock>
                                                                        </StackPanel>
                                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsMU1Enabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                            <Image Width="15" Source="Images/extMUB_trans.png"></Image>
                                                                            <TextBlock Text="MU1" />

                                                                        </StackPanel>
                                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsUSB0Enabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                            <Image Width="15" Source="Images/usb_trans.png"></Image>
                                                                            <TextBlock Text="USB0"  />
                                                                        </StackPanel>
                                                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsUSB1Enabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                                            <Image Width="15" Source="Images/usb_trans.png"></Image>
                                                                            <TextBlock Text="USB1"  />
                                                                        </StackPanel>
                                                                    </StackPanel>
                                                                </GroupBox>
                                                                <GroupBox Header="Screen Capture" Grid.Column="1" Grid.Row="1" FontSize="9" Background="{Binding CurrentTheme.Background1}">
                                                                    <Button Command="{Binding DisplayScreenShotCommand}">GO</Button>
                                                                </GroupBox>
                                                            </Grid>
                                                        </Border>
                                                    </Grid>
                                                </Grid>
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <!-- <Setter Property="TextBlock.FontWeight" Value="Bold" /> -->
                                                    <Setter TargetName="auxBorder" Property="BorderBrush" Value="Black" />
                                                    <Setter TargetName="auxBorder" Property="BorderThickness" Value="1" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red" TargetName="deviceBorder" />
                                                </Trigger>


                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <StackPanel Orientation="Vertical">
                        <Label Content="Device Pool" HorizontalAlignment="Right" VerticalAlignment="Bottom" Foreground="Black" FontSize="16" Panel.ZIndex="1" />
                    </StackPanel>
                </Grid>
            </Grid>
            <!-- Settings Button And Info Panel-->
            <Grid DockPanel.Dock="Top" Height="75" MinWidth="780" MinHeight="75" Background="{Binding CurrentTheme.Background2}">
                <Border BorderBrush="#FF828790" BorderThickness="3" />
                <Grid>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Certification Assistance Tool" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="32" Margin="5,0" Foreground="{Binding CurrentTheme.Foreground4}"></TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Version, StringFormat='v{0}'}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="9" Margin="5,0" Foreground="{Binding CurrentTheme.Foreground4}"></TextBlock>
                            <Frame>
                                <Frame.Content>
                                    <!-- Hyperlink needs to be in its own Frame to work, for some reason -->
                                    <TextBlock><Hyperlink NavigateUri="mailto:exp-pdx-automaton@microsoft.com?subject=CAT Feedback">Send Feedback</Hyperlink></TextBlock>
                                </Frame.Content>
                            </Frame>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Border BorderBrush="Black" BorderThickness="2" Margin="8" Padding="0" >
                            <StackPanel Orientation="Horizontal" Height="50">

                                <StackPanel Orientation="Vertical" Height="50" Width="250" Margin="2,0,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Current Title: " Width="80"/>
                                        <TextBlock Text="{Binding Path=CurrentTitleFriendlyName}" Width ="175" Background="{Binding CurrentTheme.Background1}" TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Platform: "  Width="80" />
                                        <TextBlock Text="{Binding Path=CurrentPlatform.Name}" Width ="175" Background="{Binding CurrentTheme.Background1}" TextTrimming="CharacterEllipsis"/>

                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Version: "  Width="80" />
                                        <TextBlock Text="{Binding Path=CurrentTCRVersion.Name}" Width ="175" Background="{Binding CurrentTheme.Background1}" TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>
                                </StackPanel>
                                <Button Command="{Binding Path=OpenSettingsCommand}" Style="{StaticResource ThemeButtonStyle}" 
                                        IsEnabled="{Binding CurrentModule.ModuleContext.IsModal, Converter={StaticResource InvertBoolConverter} }"
                                    Width="75" Height="50"  HorizontalAlignment="Left" Margin="3,0" VerticalAlignment="Center">Settings</Button>
                            </StackPanel>
                        </Border>
                    </StackPanel>

                </Grid>
            </Grid>
            <!-- Navigation Panel (LEFT)-->
            <Border BorderThickness="3" BorderBrush="#FF828790" Visibility="{Binding NavigationPanelVisibility}" >
                <Grid x:Name="LeftSide" DockPanel.Dock="Left" HorizontalAlignment="Left" Background="{Binding CurrentTheme.Background2}" >

                    <Border BorderBrush="#FF828790" BorderThickness="0,0,0,2">
                        <Grid HorizontalAlignment="Stretch" Background="{Binding CurrentTheme.Background3}" VerticalAlignment="Top">
                            <StackPanel Orientation="Vertical">
                                    <CheckBox HorizontalAlignment="Center" BorderThickness="0" Margin="0,2,0,2" IsChecked="{Binding Path=IsFilteringModules}" 
                                              VerticalAlignment="Center" IsEnabled="{Binding CurrentModule.ModuleContext.IsModal, 
                                        Converter={StaticResource InvertBoolConverter} }" >
                                    <TextBlock Text="Only Show Modules" VerticalAlignment="Top" Foreground="{Binding CurrentTheme.Foreground2}"/>
                                </CheckBox>
                                <Border BorderBrush="#FF828790" BorderThickness="0,2,0,0">
                                    <Grid>
                                        <Grid Margin="1,0,0,0" Height="{Binding ElementName=FilterTextBox, Path=ActualHeight}" Width="{Binding ElementName=FilterTextBox, Path=ActualWidth}" 
                                              Background="{Binding CurrentTheme.TextBoxBackground}"  VerticalAlignment="Center" >
                                            <TextBlock Text=" Search TCRs..." Foreground="{Binding CurrentTheme.Foreground3}" TextAlignment="Left" FontStyle="Italic" Margin="2,4,0,4"/>
                                        </Grid>
                                        <TextBox x:Name="FilterTextBox" Text="{Binding Path=TextFilter}" ToolTip="Enter filter text" Margin="0,4,0,4"
                                             VerticalAlignment="Top" Width="190" IsEnabled="{Binding CurrentModule.ModuleContext.IsModal,
                                             Converter={StaticResource InvertBoolConverter} }" TextChanged="FilterChanged" >
                                        <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource ThemeTextBoxStyle}">
                                                <Style.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Text" Value=""/>
                                                            <Condition Property="IsKeyboardFocusWithin" Value="false"/>
                                                        </MultiTrigger.Conditions>
                                                            <Setter Property="Background" Value="Transparent" />
                                                        </MultiTrigger>
                                                    </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                        <Button HorizontalAlignment="Right" Height="15" Width="15" Margin="0,0,5,0" Style="{StaticResource clearFilter}" Click="Button_Click" >
                                        </Button>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <TreeView  Background="{Binding CurrentTheme.Background2}"  ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="197" ItemsSource="{Binding Path=CurrentTCRCategoryList}"  
                          BorderThickness="0" Margin="0,53,0,0" IsEnabled="{Binding CurrentModule.ModuleContext.IsModal, Converter={StaticResource InvertBoolConverter} }">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <EventSetter Event="TreeViewItem.MouseLeftButtonUp" Handler="SelectOrReselect"/>
                                <Setter Property="Margin" Value="-18,0,0,0"></Setter>
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="Padding" Value="1" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition  Binding="{Binding Path=HasModules}" Value="false" />
                                            <Condition  Binding="{Binding Path=DataContext.IsFilteringModules, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition  Binding="{Binding Path=DataContext.IsFilteringModules, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="false" />
                                            <Condition Binding="{Binding Path=MatchesFilter}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=MatchesFilter}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=HasModules}" Value="true" />
                                            <Condition Binding="{Binding Path=DataContext.IsFilteringModules, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="true" />
                                            <Condition Binding="{Binding Path=MatchesFilter}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!-- <Setter Property="Foreground" Value="Black" />  -->
                                        <Setter Property="BorderBrush" Value="Black" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="BorderBrush" Value="White" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate >
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=TCRViewItems}" >
                                <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Width="173" Background="{Binding MainViewModel.CurrentTheme.Background4}" Foreground="White"/>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <HierarchicalDataTemplate   >
                                        <Border BorderBrush="#FFA99A90" BorderThickness="1">
                                            <TextBlock Text="{Binding IdAndName}" TextWrapping="Wrap" Width="170" />
                                        </Border>
                                    </HierarchicalDataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                            <!--

                                    </HierarchicalDataTemplate.ItemTemplate></HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                -->
                        </TreeView.ItemTemplate>

                    </TreeView>

                </Grid>
            </Border>

            <!-- Test/Modules Panel (RIGHT) -->
            <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" Width="100" Background="{Binding CurrentTheme.Background2}" Visibility="{Binding TestSelectorVisibility}">
                <Grid>
                    <Border BorderBrush="#FF828790" BorderThickness="3" />
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0,0,3,0" >
                    <ItemsControl ItemsSource="{Binding CurrentTestList}" Visibility="{Binding TestSelectorVisibility}" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" Background="{Binding CurrentTheme.Background2}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <Button Command="{Binding Path=DataContext.ChangeTestCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                        CommandParameter="{Binding}"  
                                        Height="125" Margin="8,5,8,2" Style="{StaticResource ThemeButtonStyle}">
                                        <TextBlock Text="{Binding Path=Name}" TextWrapping="Wrap" Margin="1"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    </ScrollViewer>
                </Grid>


                <Border BorderBrush="#FF828790" BorderThickness="3" />
                <Label Content="Test Cases" VerticalAlignment="Bottom" HorizontalAlignment="Right" Foreground="{Binding CurrentTheme.Foreground4}" FontSize="16" Visibility="{Binding TestSelectorVisibility}" />
            </Grid>
            <Grid DockPanel.Dock="Right" HorizontalAlignment="Right" Width="100" Background="{Binding CurrentTheme.Background2}" Visibility="{Binding ModuleSelectorVisibility}" ScrollViewer.CanContentScroll="True">
                <Border BorderBrush="#FF828790" BorderThickness="3" />
                <ScrollViewer Margin="0,3,3,3" VerticalScrollBarVisibility="Auto" >
                <ItemsControl ItemsSource="{Binding CurrentModuleList}" Visibility="{Binding ModuleSelectorVisibility}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Button Command="{Binding Path=DataContext.ChangeModuleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                        CommandParameter="{Binding}"  
                                        Height="125" Margin="8,5,8,2" Style="{StaticResource ThemeButtonStyle}">
                                    <TextBlock Text="{Binding Path=Description}" TextWrapping="Wrap" Margin="1"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                </ScrollViewer>
                <Label Content="Modules" VerticalAlignment="Bottom" HorizontalAlignment="Right" Foreground="{Binding CurrentTheme.Foreground4}" FontSize="16" Visibility="{Binding ModuleSelectorVisibility}" />
            </Grid>
            <!-- Content Panel (CENTER)-->
            <Grid Background="{Binding CurrentTheme.Background1}" >
                <Border BorderBrush="#FF828790" BorderThickness="3"/>

                <FlowDocumentScrollViewer Foreground="{Binding CurrentTheme.Foreground1}" FontSize="18" FontFamily="Verdana" Margin="0,3,2,3" Document="{Binding Path=CurrentTCR.FlowDocumentContents}" Zoom="{Binding TextZoom, Mode=TwoWay}" Visibility="{Binding TestSelectorVisibility}"   />
                
                <Border BorderBrush="#FF828790" BorderThickness="3"/>

                <FlowDocumentScrollViewer FontFamily="Verdana" Margin="0,3" Visibility="{Binding ModuleSelectorVisibility}" Zoom="{Binding TextZoom, Mode=TwoWay}">
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="{Binding CurrentTest.Name, Mode=OneWay}" FontFamily="Verdana" FontWeight="Bold" FontSize="18" />
                        </Paragraph>
                        <Table>
                            <Table.Columns>
                                <TableColumn Width="120" />
                                <TableColumn />
                            </Table.Columns>
                            <TableRowGroup>
                                <TableRow>
                                    <TableCell>
                                        <Paragraph Padding="0,0,0,12">
                                            <Run Text="Requirements:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Requirements, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Tools:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Tools, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Configuration:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Configuration, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Definition:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Definition, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Steps:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Steps, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Documentation:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Documentation, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Result:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Result, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="PassExamples:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.PassExamples, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="FailExamples:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.FailExamples, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="NaExamples:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.NaExamples, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Analysis:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Analysis, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="FAQ:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Faq, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                                <TableRow>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="Hardware:" FontFamily="Verdana" FontWeight="Bold" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                    <TableCell Padding="0,0,0,12">
                                        <Paragraph>
                                            <Run Text="{Binding Path=CurrentTest.Hardware, Mode=OneWay}" FontFamily="Verdana" FontSize="12" />
                                        </Paragraph>
                                    </TableCell>
                                </TableRow>
                            </TableRowGroup>
                        </Table>
                    </FlowDocument>
                </FlowDocumentScrollViewer>

                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding TCRNotSelectedVisibility}" MinHeight="300">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="14*"></ColumnDefinition>
                        <ColumnDefinition Width="375*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="1">
                    <Label Grid.Column="1" Content="Welcome to CAT!" FontSize="30" FontWeight="Bold" HorizontalAlignment="Center" />
                    <Image Grid.Column="1" Source="CAT.ico" Height="200"></Image>
                    <Label Grid.Column="1" Content="To begin, please use the Settings button to configure CAT for the title you wish to test." VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="0,17" />
                    </StackPanel>
                </Grid>

                <ContentPresenter Content="{Binding Path=CurrentModuleUIElement}" VerticalAlignment="Stretch" Visibility="{Binding ModulePickedVisibility}"  />
                
            </Grid>
        </DockPanel>

    </Grid>
</Window>
